{"version":3,"sources":["Components/CharacterInfoInput.js","Components/CharacterInfoCard.js","Components/CharacterInfoPane.js","Components/ActivePlayer.js","Components/MultiRoundEffect.js","Components/CombatOrderPane.js","Components/MultiRoundEffectCreator.js","Components/ToolsPane.js","App.js","registerServiceWorker.js","index.js"],"names":["CharacterInfoInput","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","modifier","handleChange","bind","assertThisInitialized","handleSubmit","event","input","target","id","value","setState","preventDefault","props","onSubmit","assign","react_default","a","createElement","className","ref","type","onChange","React","Component","CharacterInfoCard","roll","initiative","handleClick","removeCharacter","mod","parseInt","isNaN","submitInitiative","onClick","CharacterInfoPane","componentWillReceiveProps","characterData","cardState","_this2","infoCards","map","character","Components_CharacterInfoCard","key","Components_CharacterInfoInput","startCombat","ActivePlayer","player","MultiRoundEffect","details","effectName","roundValue","CombatOrderPane","turn","round","activePlayer","sortedCharacters","nextTurn","showActivePlayer","updateRemainingRounds","resortPlayers","length","triggerNextRound","determineCombatOrder","toolData","newToolData","filter","tool","forEach","updateToolData","multiEffectCards","data","toolName","Components_MultiRoundEffect","removeToolFromCombat","Components_ActivePlayer","endCombat","MultiRoundEffectCreator","ToolsPane","Components_MultiRoundEffectCreator","MainApp","renderCombat","addToolToCombat","matchFound","i","temp","slice","newCharacterData","push","sortCharacters","characters","sort","b","modifer","splice","Date","now","Components_CombatOrderPane","Components_CharacterInfoPane","renderCombatPane","Components_ToolsPane","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3923cba5.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Styles/CharacterInfoInput.css'\r\n\r\n//Component for user to define each character\r\nclass CharacterInfoInput extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tname : '',\r\n\t\t\tmodifier : 0,\r\n\t\t}\r\n\t\t\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\t\r\n\t//Updates the state of the cmp as the fields are edited\r\n\thandleChange(event) {\r\n\t\tvar input = { };\r\n\t\tinput[event.target.id] = event.target.value;\r\n\t\tthis.setState(input);\r\n\t}\r\n\t\r\n\t//Sumbits the final character details to the parent cmp\r\n\thandleSubmit(event){\r\n\t\tevent.preventDefault();\r\n\t\t//Don't allow user to submit a character with no name\r\n\t\tif (!this.state.name) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.props.onSubmit(Object.assign({},this.state));\r\n\t\tthis.setState({\r\n\t\t\tname : '',\r\n\t\t\tmodifier : 0,\r\n\t\t});\r\n\t}\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className='inputCardContainer'>\r\n\t\t\t\t<form id=\"characterInput\" ref=\"form\" onSubmit={this.handleSubmit} className='inputForm'>\r\n\t\t\t\t\tCharacter Name: \r\n\t\t\t\t\t<input type=\"text\" name=\"characterName\" id=\"name\" value = {this.state.name} onChange={this.handleChange}/><br/>\r\n\t\t\t\t\tInitiative Modifier:\r\n\t\t\t\t\t<input type=\"number\" name=\"initiativeModifer\" id=\"modifier\" value= {this.state.modifier} onChange={this.handleChange}/><br/>\r\n\t\t\t\t\t<input type=\"submit\" value=\"Add\"/>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default CharacterInfoInput;","import React from 'react';\r\nimport '../Styles/CharacterInfoCard.css';\r\n\r\n//Displays the details of a character, allows the user to enter their roll and calculates final initiative\r\nclass CharacterInfoCard extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname : props.name,\r\n\t\t\tmodifier : props.modifier,\r\n\t\t\troll : null,\r\n\t\t\tinitiative: null,\r\n\t\t}\r\n\t\t\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t\tthis.removeCharacter = this.removeCharacter.bind(this);\r\n\t}\r\n\t\r\n\t//Updates the state of the cmp as the Roll field is edited\r\n\thandleChange(event) {\r\n\t\tthis.setState({roll : event.target.value});\r\n\t}\r\n\t\r\n\t//Calculates the final initiative\r\n\thandleClick(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tvar mod = parseInt(this.state.modifier, 10);\r\n\t\tvar roll = parseInt(this.state.roll, 10);\r\n\t\t//Don't allow user to submit an impossible roll\r\n\t\tif(roll < 1 || roll > 20 || isNaN(roll)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar initiative = mod + roll;\r\n\t\tif (initiative < 0) {\r\n\t\t\tinitiative = 0\r\n\t\t};\r\n\t\tthis.setState({\r\n\t\t\tinitiative:initiative}, \r\n\t\t\tfunction(){\r\n\t\t\t\tthis.submitInitiative()\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\t\r\n\t//Sends the calculated initiative to the parent component\r\n\tsubmitInitiative() {\r\n\t\tthis.props.handleChange(this.state);\r\n\t}\r\n\r\n\t//Notifies the parent component to remove this component\r\n\tremoveCharacter(){\r\n\t\tthis.props.removeCharacter(this.state);\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"characterInfoCard\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>Name: {this.state.name}</p>\r\n\t\t\t\t\t<p>Initiative Modifier: {this.state.modifier}</p>\r\n\t\t\t\t\t<form onSubmit={this.handleClick}>\r\n\t\t\t\t\t\tRoll:<input type=\"number\" name=\"initiativeRoll\" onChange= {this.handleChange} />\r\n\t\t\t\t\t\t<input type=\"submit\" value=\"OK\" />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<p>Initiative: {this.state.initiative}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type=\"button\" onClick={this.removeCharacter}>X</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CharacterInfoCard;","import React from 'react';\r\nimport '../Styles/CharacterInfoPane.css';\r\nimport CharacterInfoInput from './CharacterInfoInput';\r\nimport CharacterInfoCard from './CharacterInfoCard';\r\n\r\nclass CharacterInfoPane extends React.Component {\r\n\tconstructor(props){\r\n\t    super(props);\r\n\t\tthis.componentWillReceiveProps(props)\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.removeCharacter = this.removeCharacter.bind(this);\r\n\t}\r\n\t\r\n\tcomponentWillReceiveProps(props) {\r\n\t\t\t\r\n\t}\r\n\t\r\n\t//Passes the character data to the parent componet\r\n\thandleSubmit(characterData) {\r\n\t\tthis.props.handleChange(characterData);\r\n\t}\r\n\r\n\t//Passes data changes to the parent component\r\n\thandleChange(cardState) {\r\n\t\tthis.props.handleChange(cardState);\r\n\t}\r\n\r\n\t//Render the input cards\r\n  \t\r\n\r\n  \t//Passes the character to be removed to the parent component\r\n  \tremoveCharacter(target) {\r\n  \t\tthis.props.removeCharacter(target);\r\n  \t}\r\n  \r\n  \trender() {\r\n\t//Renders the Info card from the state\r\n\t\tconst infoCards = this.props.characterData.map((character) => {\r\n\t\t\treturn(\r\n\t\t\t\t<CharacterInfoCard \r\n\t\t\t\t\tname = {character.name}\r\n\t\t\t\t\tmodifier = {character.modifier}\r\n\t\t\t\t\thandleChange = {this.handleChange}\r\n\t\t\t\t\tkey = {character.name}\r\n\t\t\t\t\tremoveCharacter = {this.removeCharacter}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t\t\r\n    \treturn (\r\n\t\t\t<div className=\"characterInfoPane\">\r\n\t\t\t\t<h3><b>Characters</b></h3>\r\n\t\t\t\t<div >\r\n\t\t\t\t\t{infoCards}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div >\r\n\t\t\t\t\t<CharacterInfoInput\r\n        \t\t\t\tonSubmit = {this.handleSubmit}\r\n      \t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"startCombatButton\">\r\n\t\t\t\t\t<button onClick={this.props.startCombat}>Start Combat</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n    \t);\r\n  \t}\r\n}\r\n\r\nexport default CharacterInfoPane;","import React from 'react';\r\nimport '../Styles/ActivePlayer.css'\r\n\r\nclass ActivePlayer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname : props.player.name,\r\n\t\t\tinitiative : props.player.initiative,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(props){\r\n\t\tthis.setState({\r\n\t\t\tname : props.player.name,\r\n\t\t\tinitiative : props.player.initiative,\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"activePlayer\">\r\n\t\t\t\t<p>Name:{this.state.name}</p>\r\n\t\t\t\t<p>Initiative:{this.state.initiative}</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ActivePlayer;","import React from 'react';\r\nimport '../Styles/MultiRoundEffect.css'\r\n\r\nclass MultiRoundEffect extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"multiRoundEffect\">\r\n\t\t\t\t<p>{this.props.details.effectName}</p>\r\n\t\t\t\t<p>Rounds Remaining: {this.props.details.roundValue} </p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MultiRoundEffect;","import React from 'react';\r\nimport ActivePlayer from './ActivePlayer';\r\nimport MultiRoundEffect from './MultiRoundEffect';\r\nimport '../Styles/CombatOrderPane.css'\r\n\r\nclass CombatOrderPane extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tturn : 0,\r\n\t\t\tround : 1,\r\n\t\t\tactivePlayer: props.sortedCharacters[0],\r\n\t\t}\r\n\r\n\t\tthis.nextTurn = this.nextTurn.bind(this);\r\n\t\tthis.showActivePlayer = this.showActivePlayer.bind(this);\r\n\t\tthis.updateRemainingRounds = this.updateRemainingRounds.bind(this);\r\n\t\tthis.resortPlayers = this.resortPlayers.bind(this);\r\n\t}\r\n\r\n\tnextTurn() {\r\n\t\tif (this.state.turn + 1 === this.props.sortedCharacters.length) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tround : this.state.round+1,\r\n\t\t\t\tturn : 0,\r\n\t\t\t}, this.triggerNextRound);\r\n\t\t} else {\r\n\t\t\tthis.setState({turn : this.state.turn+1}, this.showActivePlayer);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tshowActivePlayer() {\r\n\t\tthis.setState({activePlayer : this.props.sortedCharacters[this.state.turn]})\r\n\t}\r\n\r\n\tresortPlayers() {\r\n\t\tdebugger;\r\n\t\tthis.props.determineCombatOrder();\r\n\t\tthis.showActivePlayer();\r\n\t}\r\n\r\n\ttriggerNextRound() {\r\n\t\tthis.showActivePlayer();\r\n\t\tif (this.props.toolData.length >= 1) {\r\n\t\t\tthis.updateRemainingRounds();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateRemainingRounds(){\r\n\t\tvar newToolData = this.props.toolData.filter(function(tool) {\r\n\t\t\treturn (tool.roundValue - 1 > 0);\r\n\t\t});\r\n\t\tnewToolData.forEach(function(tool){\r\n\t\t\ttool.roundValue -= 1;\r\n\t\t});\r\n\t\tthis.props.updateToolData(newToolData);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst multiEffectCards = this.props.toolData.map((data) => {\r\n\t\t\tif (data.toolName === 'multi') {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MultiRoundEffect \r\n\t\t\t\t\t\tdetails = {data}\r\n\t\t\t\t\t\tround = {this.state.round}\r\n\t\t\t\t\t\tkey = {data.key}\r\n\t\t\t\t\t\tremoveToolFromCombat = {this.removeToolFromCombat}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\t\r\n\t\t});\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"combatOrderPane\">\r\n\t\t\t\t<h2><b>Battle!</b></h2>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tRound: {this.state.round}\r\n\t\t\t\t\t&nbsp;&nbsp;&nbsp;   \r\n\t\t\t\t\tTurn: {this.state.turn + 1}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"MultiRoundEffectContainer\">\r\n\t\t\t\t\t{multiEffectCards}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ActivePlayer \r\n\t\t\t\t\t\tplayer = {this.state.activePlayer}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={this.nextTurn}>Next Turn</button>\r\n\t\t\t\t\t<button onClick={this.resortPlayers}>Resort Players</button>\r\n\t\t\t\t\t<button onClick={this.props.endCombat}>End Combat</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CombatOrderPane;","import React from 'react'\r\nimport '../Styles/MultiRoundEffectCreator.css'\r\n\r\nclass MultiRoundEffectCreator extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\teffectName : '',\r\n\t\t\troundValue : 1,\r\n\t\t\ttoolName : 'multi',\r\n\t\t}\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\t//Updates the state of the cmp as the fields are edited\r\n\thandleChange(event) {\r\n\t\tvar input = { };\r\n\t\tinput[event.target.id] = event.target.value;\r\n\t\tthis.setState(input);\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\t//Don't allow user to submit a character with no name\r\n\t\tif (!this.state.effectName || this.state.roundValue <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.onSubmit(Object.assign({},this.state));\r\n\t\tthis.setState({\r\n\t\t\teffectName : '',\r\n\t\t\troundValue : 1,\r\n\t\t});\r\n\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"multiRoundEffectCreator\">\r\n\t\t\t\t<h4>Add Multi-round Effect</h4>\r\n\t\t\t\t<form id=\"effectInfoInputForm\" ref=\"form\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t\tEffect Name: \r\n\t\t\t\t\t<input type=\"text\" name=\"effectName\" id=\"effectName\" value={this.state.effectName} onChange={this.handleChange}/><br/>\r\n\t\t\t\t\tNumber of Rounds: \r\n\t\t\t\t\t<input type=\"number\" name=\"roundValue\" id=\"roundValue\" value={this.state.roundValue} onChange={this.handleChange}/><br/>\r\n\t\t\t\t\t<input type=\"submit\" value=\"Add\" />\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MultiRoundEffectCreator;","import React from 'react'\r\nimport MultiRoundEffectCreator from './MultiRoundEffectCreator'\r\nimport '../Styles/ToolsPane.css'\r\n\r\nclass ToolsPane extends React.Component {\r\n\r\n\thandleSubmit(data){\r\n\t\tthis.props.onSubmit(data);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"toolsPane\">\r\n\t\t\t\t<h3><b>Tools</b></h3>\r\n\t\t\t\t<div className=\"multiRoundEffectCreatorContainter\">\r\n\t\t\t\t\t<MultiRoundEffectCreator \r\n\t\t\t\t\t\tonSubmit = {(data) => {\r\n\t\t\t\t\t\t\tthis.handleSubmit(data)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ToolsPane;","import React from 'react';\r\nimport './App.css';\r\nimport CharacterInfoPane from './Components/CharacterInfoPane.js';\r\nimport CombatOrderPane from './Components/CombatOrderPane.js';\r\nimport ToolsPane from './Components/ToolsPane.js';\r\n\r\nclass MainApp extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      characterData : [],\r\n      sortedCharacters : [],\r\n      renderCombat : false,\r\n      toolData : [],\r\n    }\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.startCombat = this.startCombat.bind(this);\r\n    this.determineCombatOrder = this.determineCombatOrder.bind(this);\r\n    this.removeCharacter = this.removeCharacter.bind(this);\r\n    this.addToolToCombat = this.addToolToCombat.bind(this);\r\n    this.updateToolData = this.updateToolData.bind(this);\r\n    this.endCombat = this.endCombat.bind(this);\r\n  }\r\n  \r\n  //Handles all character data changes \r\n  handleChange(cardState) {\r\n    var matchFound = false;\r\n    for (var i = 0; i < this.state.characterData.length; i++) {\r\n      var character = this.state.characterData[i];\r\n      if (character.name === cardState.name) {\r\n        var temp = this.state.characterData.slice();\r\n        temp[i] = cardState;\r\n        this.setState({characterData : temp})\r\n        matchFound = true;\r\n      }\r\n      if(matchFound) {\r\n        break;\r\n      }\r\n    }\r\n    if (!matchFound) {\r\n      var newCharacterData = this.state.characterData.slice();\r\n      newCharacterData.push(cardState);\r\n      this.setState({characterData : newCharacterData});\r\n    }\r\n  }\r\n\r\n  startCombat() {\r\n    if (this.state.characterData.length < 1 || this.renderCombat === true) {\r\n      return;\r\n    }\r\n    this.determineCombatOrder();\r\n    this.setState ({\r\n      renderCombat : true\r\n    });\r\n  }\r\n\r\n  determineCombatOrder(){\r\n    if (this.state.characterData.length < 1) {\r\n      return;\r\n    }\r\n    var sortedCharacters = this.sortCharacters(this.state.characterData);\r\n    this.setState({\r\n      sortedCharacters : sortedCharacters,\r\n    });\r\n  }\r\n\r\n  sortCharacters(characters){\r\n    var sortedCharacters = characters.slice();\r\n    function compareInitiative(a,b) {\r\n      if (a.initiative > b.initiative) {\r\n        return -1;\r\n      } else if ( a.initiative < b.initiative) {\r\n        return 1;\r\n      } else if (a.initiative === b.initiative) {\r\n        if (a.modifier > b.modifer) {\r\n          return -1;\r\n        } else if (a.modifer < b.modifer) {\r\n          return 1;\r\n        }\r\n      }\r\n      return 0;\r\n    }\r\n    return sortedCharacters.sort(compareInitiative);  \r\n  }\r\n\r\n  removeCharacter(target) {\r\n      for(var i = 0; i < this.state.characterData.length; i++) {\r\n        var character = this.state.characterData[i];\r\n        if (character.name === target.name && character.modifier === target.modifier) {\r\n          var temp = this.state.characterData.slice();\r\n          temp.splice(i,1);\r\n          this.setState({characterData : temp});\r\n        }\r\n      }\r\n  }\r\n\r\n  addToolToCombat(data) {\r\n    if (this.state.renderCombat === true) {\r\n      var temp = [];\r\n      temp = this.state.toolData.slice();\r\n      data[\"key\"] = Date.now();\r\n      temp.push(data);\r\n      this.setState({toolData : temp});\r\n    }\r\n  }\r\n\r\n  updateToolData(newToolData) {\r\n    this.setState({toolData: newToolData});\r\n  }\r\n\r\n  renderCombatPane() {\r\n    if (this.state.renderCombat) {\r\n      return (\r\n          <CombatOrderPane \r\n            sortedCharacters = {this.state.sortedCharacters}\r\n            endCombat = {this.endCombat}\r\n            toolData = {this.state.toolData}\r\n            updateToolData = {this.updateToolData}\r\n            determineCombatOrder = {this.determineCombatOrder}\r\n          />\r\n      )\r\n    }\r\n  }\r\n\r\n  endCombat() {\r\n    if(this.state.renderCombat) {\r\n      this.setState({renderCombat : false});\r\n      this.updateToolData([]);\r\n    } \r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"appContainer\">\r\n        <div className=\"header\">\r\n\r\n        </div>\r\n        <div className=\"characterInfoPaneContainer\">\r\n          <CharacterInfoPane \r\n            characterData = {this.state.characterData}\r\n            handleChange = {this.handleChange}\r\n            startCombat = {this.startCombat}\r\n            removeCharacter = {this.removeCharacter}\r\n          />\r\n        </div>\r\n        <div className=\"comabatOrderPaneContainer\">\r\n          {this.renderCombatPane()}\r\n        </div>\r\n        <div className=\"toolsPane\">\r\n          <ToolsPane\r\n            onSubmit = {this.addToolToCombat}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainApp;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}